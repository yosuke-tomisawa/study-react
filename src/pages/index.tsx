import Head from "next/head";
import localFont from "next/font/local";
import styles from "@/styles/Home.module.css";
import { Footer } from "src/components/Footer";
import { Links } from "src/components/Links";
import { Header } from "src/components/Header";
import { useCallback, useEffect, useState } from "react";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export default function Home() {
  // let foo = 1;
  const [count, setCount] = useState(1);
  const [text, setText] = useState("");
  const [isShow, setIsShow] = useState(true);
  const [array, setArray] = useState([]);
  const handleClick = useCallback(() => {
    if (count < 10) {
      setCount((prevCount) => prevCount + 1);
    }
  }, [count]);

  const handleDisplay = useCallback(() => {
    setIsShow((prevIsShow) => !prevIsShow);
  }, []);

  const handleAdd = useCallback(() => {
    setArray((prevArray) => {
      if (prevArray.some((item) => item === text)) {
        alert("同じ要素がすでに存在します");
        return prevArray;
      }
      return [...prevArray, text]; // 正しい形に修正
    });
  }, [text]);

  useEffect(() => {
    document.body.style.backgroundColor = "lightblue";
    return () => {
      document.body.style.backgroundColor = "";
    };
  }, []);

  const handleChange = useCallback((e) => {
    if (e.target.value.length >= 5) {
      alert("文字数は5文字まで");
      return;
    }
    setText(e.target.value.trim());
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
        className={`${styles.page} ${geistSans.variable} ${geistMono.variable}`}
      >
        <main className={styles.main}>
          <Header />
          <h1>Index Page</h1>
          <Links onClick={() => alert("トップページです")}>
            {isShow ? <p>{count}</p> : null}
            <button onClick={handleClick}>ボタン</button>
            <button onClick={handleDisplay}>
              {isShow ? "非表示" : "表示"}
            </button>
            <input type="text" value={text} onChange={handleChange} />
            <button onClick={handleAdd}>追加</button>
            <ul>
              {array.map((item) => {
                return <li key={item}>{item}</li>;
              })}
            </ul>
            <ol>
              <li>
                Get started by editing <code>about.pages</code>.
              </li>
              <li>Save and see your changes instantly.</li>
            </ol>
          </Links>
        </main>

        <Footer />
      </div>
    </>
  );
}
